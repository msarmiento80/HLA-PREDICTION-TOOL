import streamlit as st
import pandas as pd
from fpdf import FPDF
import base64
import datetime
import os
import random
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use('Agg')

# --- CONFIGURACI√ìN INICIAL ---
st.set_page_config(
    page_title="HLA Evaluator",
    page_icon="favicon.png",
    layout="centered"
)

# --- ESTILO PERSONALIZADO ---
st.markdown(
    """
    <style>
    .stApp {
        background-color: #f0f8ff;
        color: #111111;
    }
    h1 {
        color: #003366;
        text-align: center;
        font-size: 28px;
    }
    h4 {
        text-align: center;
        color: #003366;
    }
    .block-container {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# --- SELECTOR DE IDIOMA ---
idioma = st.selectbox("\U0001F310 Idioma / Language", ["Espa√±ol", "English"])
T = lambda es, en: es if idioma == "Espa√±ol" else en

# --- T√çTULOS PRINCIPALES ---
st.title(T("Evaluador de Compatibilidad HLA", "HLA Compatibility Evaluator"))
st.markdown(f"<h4>{T('Programa de Trasplante Hematopoy√©tico del Adulto - Pontificia Universidad Cat√≥lica de Chile', 'Adult Hematopoietic Transplant Program - Pontifical Catholic University of Chile')}</h4>", unsafe_allow_html=True)

# --- C√ìDIGO DE PACIENTE ---
codigo = st.text_input(T("C√≥digo del paciente", "Patient code"))
if not codigo:
    st.warning(T("Debe ingresar un c√≥digo para continuar.", "Please enter a code to continue."))
    st.stop()

# --- FECHA E ID DE INFORME ---
fecha = datetime.date.today().strftime("%Y-%m-%d")
id_informe = f"TPH-{datetime.date.today().strftime('%Y%m%d')}-{random.randint(1000,9999)}"

# --- DATOS DE COMPATIBILIDAD HLA ---
st.header(T("Incompatibilidad HLA", "HLA Mismatching"))
dis_a = st.checkbox("HLA-A")
dis_b = st.checkbox("HLA-B")
dis_c = st.checkbox("HLA-C")
dis_drb1 = st.checkbox("HLA-DRB1")
dis_dqb1 = st.checkbox("HLA-DQB1")
dpb1_no_perm = st.checkbox("HLA-DPB1 no permisivo")
lider_tt = st.checkbox("Polimorfismo l√≠der HLA-B T/T")

# --- DATOS DEL DONANTE ---
st.header(T("Datos del Donante", "Donor Information"))
edad_don = st.number_input(T("Edad del donante", "Donor age"), 0, 75, 30)
grupo_don = st.selectbox("Grupo sangu√≠neo donante", ["A", "B", "AB", "O"])
sexo_don = st.selectbox(T("Sexo del donante", "Donor sex"), ["Masculino", "Femenino"])
grupo_rec = st.selectbox("Grupo sangu√≠neo receptor", ["A", "B", "AB", "O"])
hijos_don = st.checkbox(T("Donante con hijos", "Donor has children"))

# --- NIVELES DE ANTI-HLA (DSA) ---
dsa_valor = st.number_input(T("Nivel de anticuerpos anti-HLA (DSA, MFI)", "Anti-HLA antibodies level (DSA, MFI)"), min_value=0, value=0)

# --- TABLA DE FACTORES ---
data = {
    "Ranking": ["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£", "üîü"],
    "Factor": [
        "HLA-DRB1 mismatch",
        "HLA-A or HLA-B mismatch",
        "Non-permissive HLA-DPB1",
        "HLA-C mismatch",
        "HLA-DQB1 mismatch",
        "HLA-B leader (M/T)",
        "HLA-DQA1 mismatch",
        "KIR ligand mismatch",
        "Allelic vs Antigen mismatch",
        "Mismatch directionality"
    ],
    "Impact": [
        "‚Üë Acute GVHD, ‚Üì OS, ‚Üë TRM",
        "‚Üë GVHD, graft failure, ‚Üì survival",
        "‚Üë GVHD, ‚Üë TRM",
        "‚Üë chronic GVHD, moderate TRM",
        "Limited effect alone; augments DRB1",
        "‚Üë relapse if mismatch (M donor)",
        "Emerging evidence; CD4 repertoire",
        "‚Üì relapse, NK alloreactivity (AML)",
        "Allele mismatch worse than antigen",
        "GVHD (GVH), graft loss (HVG)"
    ]
}
df_tabla = pd.DataFrame(data)

st.subheader(T("üìä Factores Inmunogen√©ticos Clave", "üìä Key Immunogenetic Factors"))
st.dataframe(df_tabla, use_container_width=True)

# --- GUARDAR IMAGEN DE LA TABLA ---
fig, ax = plt.subplots(figsize=(8, 4))
ax.axis('off')
tabla = ax.table(cellText=df_tabla.values, colLabels=df_tabla.columns, loc='center', cellLoc='center')
tabla.auto_set_font_size(False)
tabla.set_fontsize(8)
tabla.scale(1, 1.5)
img_path = f"/tmp/tabla_factores_{codigo}_{fecha}.png"
plt.savefig(img_path, bbox_inches='tight')
plt.close()

# --- GENERAR PDF (INCLUYENDO LA TABLA COMO IMAGEN Y REFERENCIAS) ---
if st.button(T("üìÑ Generar PDF", "üìÑ Generate PDF")):
    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", 'B', 14)
    pdf.cell(200, 10, T("Informe de Evaluaci√≥n HLA", "HLA Evaluation Report"), ln=True, align='C')
    pdf.set_font("Arial", '', 12)
    pdf.ln(10)
    pdf.multi_cell(0, 10, f"""{T('C√≥digo del paciente', 'Patient code')}: {codigo}
{T('Fecha', 'Date')}: {fecha}
{T('ID del informe', 'Report ID')}: {id_informe}

{T('La tabla de factores inmunogen√©ticos clave se adjunta a continuaci√≥n.', 'Key immunogenetic factors table is attached below.')}
""")
    pdf.image(img_path, x=10, w=190)
    pdf.ln(10)
    pdf.set_font("Arial", 'B', 12)
    pdf.cell(0, 10, T("Referencias (formato APA)", "References (APA format)"), ln=True)
    pdf.set_font("Arial", '', 10)
    referencias = [
        "Lee SJ, et al. (2007). Blood, 110(13), 4576‚Äì4583.",
        "Morishima Y, et al. (2015). Blood, 125(7), 1189‚Äì1197.",
        "Fleischhauer K, et al. (2012). Blood, 119(9), 2196‚Äì2203.",
        "Petersdorf EW, et al. (2001). Blood, 98(10), 2922‚Äì2929.",
        "Kawase T, et al. (2007). Blood, 110(13), 4576‚Äì4583.",
        "Pidala J, et al. (2020). J Clin Oncol, 38(14), 1390‚Äì1398.",
        "Madbouly AS, et al. (2016). Blood, 127(22), 2498‚Äì2506.",
        "Ruggeri L, et al. (2002). Science, 295(5562), 2097‚Äì2100.",
        "Petersdorf EW, et al. (2001). N Engl J Med, 344(9), 620‚Äì628.",
        "Dehn J, et al. (2014). Biol Blood Marrow Transplant, 20, S1‚ÄìS136."
    ]
    for ref in referencias:
        pdf.multi_cell(0, 8, f"- {ref}")

    path = f"/tmp/informe_hla_{codigo}_{fecha}.pdf"
    pdf.output(path)
    with open(path, "rb") as f:
        b64 = base64.b64encode(f.read()).decode()
        href = f'<a href="data:application/octet-stream;base64,{b64}" download="informe_hla_{codigo}_{fecha}.pdf">üì• {T("Descargar PDF", "Download PDF")}</a>'
        st.markdown(href, unsafe_allow_html=True)
